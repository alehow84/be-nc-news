{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles",
    "queries": ["author", "topic", "sort_by", "order"],
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "comment_count": 6
        }
      ]
    }
  },
  "GET /api/articles/:articles_id": {
    "description": "returns an articles object containing the article associated with the clients requested article_id",
    "exampleResponse": { "article" :{
      "article_id": 1,
      "title": "Living in the shadow of a great man",
      "topic": "mitch",
      "author": "butter_bridge",
      "body": "I find this existence challenging",
      "created_at": "2020-07-09T20:11:00.000Z",
      "votes": 100,
      "article_img_url":
        "https://images.pexels.com/photos/158651/news-newsletter-newspaper-information-158651.jpeg?w=700&h=700"
    }}
  },
  "GET /api/articles/:articles_id/comments" : {
    "description" : "returns an array of comment objects for the given article_id",
    "exampleResponse" : [{
      "comment_id": 14,
      "body": "I love this article",
      "article_id": 9,
      "author": "Mr Positive",
      "votes": 5,
      "created_at": "2020-07-09T20:11:00.000Z"
  }, {
    "comment_id": 15,
    "body": "I'm not so sure I like this",
    "article_id": 9,
    "author": "Mr Skeptical",
    "votes": 3,
    "created_at": "2020-08-01T20:11:00.000Z"
}
    ]
  },
  "POST /api/articles/:article_id/comments": {
    "description" : " returns a posted comment object when user posts a comment with an existing article_id and username and adds comment to comments db",
    "queries": [],
    "exampleResponse": {"postedComment": {
      "comment_id": 19,
      "body": "I can't wait for bed-time",
      "article_id": 5,
      "author": "butter_bridge",
      "votes": 10,
      "created_at": "2024-01-17T20:15:27.000Z"
  }}
  }
}
